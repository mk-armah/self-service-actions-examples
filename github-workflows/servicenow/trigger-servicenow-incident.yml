# Description: This workflow creates a ServiceNow incident and ingests it into Port
## Remove comments and edit for more fields as part of the ServiceNow incident

name: Create an incident in ServiceNow

on:
  workflow_dispatch:
    inputs:
      short_description:
        type: string
      assigned_to:
        type: string
      urgency:
        type: string
      sysparm_display_value:
        type: string
      sysparm_input_display_value:
        type: boolean
      port_payload:
        required: true
        description: "Port's payload, including details for who triggered the action and general context (blueprint, run id, etc...)"
        type: string

    secrets:
      SERVICENOW_USERNAME:
        required: true
      SERVICENOW_PASSWORD:
        required: true
      SERVICENOW_INSTANCE_URL:
        required: true
      PORT_CLIENT_ID:
        required: true
      PORT_CLIENT_SECRET:
        required: true

jobs:
  create-entity-in-port-and-update-run:
    outputs:
      id: formatted_date
      value: ${{ steps.format_date.outputs.formatted_date }}

    runs-on: ubuntu-latest
    steps:
      - name: Inform start of ServiceNow incident creation
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{fromJson(inputs.port_payload).context.runId}}
          logMessage: Starting request to create ServiceNow incident

      - name: Create a ServiceNow incident
        id: servicenow_incident
        uses: fjogeleit/http-request-action@v1
        with:
          url: "${{ secrets.SERVICENOW_INSTANCE_URL }}/api/now/table/incident"
          method: "POST"
          username: ${{ secrets.SERVICENOW_USERNAME }}
          password: ${{ secrets.SERVICENOW_PASSWORD }}
          customHeaders: '{"Content-Type": "application/json"}'
          data: '{"short_description": "${{ inputs.short_description }}", "assigned_to": "${{ inputs.assigned_to }}", "urgency": "${{ inputs.urgency }}", "sysparm_display_value": "${{ inputs.sysparm_display_value }}", "sysparm_input_display_value": "${{ inputs.sysparm_input_display_value }}"}'

      - name: Inform completion of ServiceNow incident creation
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{fromJson(inputs.port_payload).context.runId}}
          logMessage: Finished request to create ServiceNow incident

      - name: Inform start of ingesting ServiceNow incident into Port
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{fromJson(inputs.port_payload).context.runId}}
          logMessage: Ingesting ServiceNow incident into Port

      - name: Convert createdOn to desired format
        id: format_date
        run: |
          original_date="${{ fromJson(steps.servicenow_incident.outputs.response).result.sys_created_on }}"
          formatted_date=$(date -d "${original_date}" -u +"%Y-%m-%dT%H:%M:%SZ")
          echo "formatted_date=${formatted_date}" >> $GITHUB_OUTPUT

      - name: UPSERT Entity
        uses: port-labs/port-github-action@v1
        with:
          identifier: ${{ fromJson(steps.servicenow_incident.outputs.response).result.number }}
          title: ${{ fromJson(steps.servicenow_incident.outputs.response).result.short_description }}
          blueprint: servicenowIncident
          properties: |-
            {
              "category": "${{ fromJson(steps.servicenow_incident.outputs.response).result.category }}",
              "reopenCount": "${{ fromJson(steps.servicenow_incident.outputs.response).result.reopen_count }}",
              "severity": "${{ fromJson(steps.servicenow_incident.outputs.response).result.severity }}",
              "assignedTo": "${{ fromJson(steps.servicenow_incident.outputs.response).result.assigned_to.link }}",
              "urgency": "${{ fromJson(steps.servicenow_incident.outputs.response).result.urgency }}",
              "contactType": "${{ fromJson(steps.servicenow_incident.outputs.response).result.contact_type }}",
              "createdOn": "${{ steps.format_date.outputs.formatted_date }}",
              "createdBy": "${{ fromJson(steps.servicenow_incident.outputs.response).result.sys_created_by }}",
              "isActive": "${{ fromJson(steps.servicenow_incident.outputs.response).result.active }}",
              "priority": "${{ fromJson(steps.servicenow_incident.outputs.response).result.priority }}"
            }
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: UPSERT
          runId: ${{ fromJson(inputs.port_payload).context.runId }}

      - name: Inform of workflow completion
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{ fromJson(inputs.port_payload).context.runId }}
          logMessage: Finished ingesting ServiceNow incident into Port
