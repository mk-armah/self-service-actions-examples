name: Ingest DORA Metrics

on:
  workflow_dispatch:
    inputs:
      repository:
        description: 'Comma-separated list of repositories to analyze (eg. port-labs/self-service-actions)'
        required: true
      timeframe:
        description: 'Last X weeks'
        required: true
      port_payload:
        required: true
        description: Port's payload, including details for who triggered the action and
          general context (blueprint, run id, etc...)
        type: string
      
jobs:
  compute-dora-metrics:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Convert Weeks to Days
        run: |
          days=$(( ${{ github.event.inputs.timeframe }} * 7 ))
          echo "TIMEFRAME_IN_DAYS=$days" >> $GITHUB_ENV
        shell: bash

      - name: Log Before Running Deployment Frequency
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{fromJson(github.event.inputs.port_payload).context.runId}}
          logMessage: "Computing deployment frequency metric ..."
          
      - name: Run DORA Deployment Frequency 
        id: deploymement_frequency
        shell: pwsh
        run: |
           $scriptPath = Join-Path ${{ github.workspace }} "src/deploymentfrequency.ps1"
           chmod +x $scriptPath
           $output = & pwsh -File $scriptPath -ownerRepo "${{ inputs.repository }}" -workflows "CI/CD" -branch "main" -numberOfDays '60' -patToken "${{ secrets.PATTOKEN }}"
           $jsonLine = $output | Select-String "###JSON_START###" -Context 0,1 | ForEach-Object { $_.Context.PostContext }
           echo "::set-output name=jsonResult::$jsonLine"

      - name: Set Deployment Frequency Results
        run: |
          results='${{ steps.lead_time_for_changes.outputs.jsonResult }}'
          echo "Lead Time for Changes Results: $results"
          echo "TOTAL_DEPLOYMENTS=$(echo $results | jq -r '.TotalDeployments')" >> $GITHUB_ENV
          echo "DEPLOYMENT_FREQUENCY_RATING=$(echo $results | jq -r '.Rating')" >> $GITHUB_ENV
          echo "NUMBER_OF_UNIQUE_DEPLOYMENTS=$(echo $results | jq -r '.NumberOfUniqueDeploymentDays')" >> $GITHUB_ENV
          echo "DEPLOYMENT_FREQUENCY=$(echo $results | jq -r '.DeploymentFrequency')" >> $GITHUB_ENV
        shell: bash

      - name: Log Before Running Lead Time for Changes
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{fromJson(github.event.inputs.port_payload).context.runId}}
          logMessage: "Computing lead time for changes metric ..."
          
      - name: Run DORA Lead Time for Changes
        id: lead_time_for_changes
        shell: pwsh
        run: |
          $scriptPath = Join-Path ${{ github.workspace }} "src/leadtimeforchanges.ps1"
          chmod +x $scriptPath
          $output = & pwsh -File $scriptPath -ownerRepo "${{ github.event.inputs.repository }}" -workflows "CI/CD" -branch "main" -numberOfDays '30' -commitCountingMethod "last" -patToken "${{ secrets.PATTOKEN }}"
          $jsonLine = $output | Select-String "###JSON_START###" -Context 0,1 | ForEach-Object { $_.Context.PostContext }
          echo "::set-output name=jsonResult::$jsonLine"

      - name: Set Lead Time for Changes Results
        run: |
          results='${{ steps.lead_time_for_changes.outputs.jsonResult }}'
          echo "Lead Time for Changes Results: $results"
          echo "LEAD_TIME_FOR_CHANGES_IN_HOURS=$(echo $results | jq -r '.LeadTimeForChangesInHours')" >> $GITHUB_ENV
          echo "LEAD_TIME_RATING=$(echo $results | jq -r '.Rating')" >> $GITHUB_ENV
          echo "WORKFLOW_AVERAGE_TIME_DURATION=$(echo $results | jq -r '.WorkflowAverageTimeDuration')" >> $GITHUB_ENV
          echo "PR_AVERAGE_TIME_DURATION=$(echo $results | jq -r '.PRAverageTimeDuration')" >> $GITHUB_ENV
        shell: bash

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          # pip install httpx
          pip install PyGithub datetime

      - name: Log Before Running PR Metrics
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{fromJson(github.event.inputs.port_payload).context.runId}}
          logMessage: "Computing PR metrics on the repository ..."
          
      - name: Compute PR Metrics
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use the automatically provided GITHUB_TOKEN
          REPOSITORY: ${{ github.event.inputs.repository }}
        run: python src/calculate_pr_metrics.py

      - name: Log Before Upserting Entity
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{fromJson(github.event.inputs.port_payload).context.runId}}
          logMessage: "Upserting dora metrics to Port"

      - name: UPSERT Entity
        uses: port-labs/port-github-action@v1
        with:
          identifier: "${{ fromJson(env.metrics).id }}"
          title: ${{ github.event.inputs.repository }}
          blueprint: doraMetrics
          properties: |-
            {
              "totalDeployments": "${{ env.TOTAL_DEPLOYMENTS }}",
              "deploymentRating": "${{ env.DEPLOYMENT_RATING }}",
              "numberOfUniqueDeploymentDays": "${{ env.NUMBER_OF_UNIQUE_DEPLOYMENTS }}",
              "deploymentFrequency": "${{ env.DEPLOYMENT_FREQUENCY }}",
              "leadTimeForChangesInHours": "${{ env.LEAD_TIME_FOR_CHANGES_IN_HOURS }}",
              "leadTimeRating": "${{ env.LEAD_TIME_RATING }}",
              "workflowAverageTimeDuration": "${{ env.WORKFLOW_AVERAGE_TIME_DURATION }}",
              "prAverageTimeDuration": "${{ env.PR_AVERAGE_TIME_DURATION }}",
              "averageOpenToCloseTime": "${{ fromJson(env.metrics).average_open_to_close_time }}",
              "averageTimeToFirstReview": "${{ fromJson(env.metrics).average_time_to_first_review }}",
              "averageTimeToApproval": "${{ fromJson(env.metrics).average_time_to_approval }}",
              "prsOpened": "${{ fromJson(env.metrics).prs_opened }}",
              "weeklyPrsMerged": "${{ fromJson(env.metrics).weekly_prs_merged }}",
              "averageReviewsPerPr": "${{ fromJson(env.metrics).average_reviews_per_pr }}",
              "averageCommitsPerPr": "${{ fromJson(env.metrics).average_commits_per_pr }}",
              "averageLocChangedPerPr": "${{ fromJson(env.metrics).average_loc_changed_per_pr }}",
              "averagePrsReviewedPerWeek": "${{ fromJson(env.metrics).average_prs_reviewed_per_week }}"
            }
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: UPSERT
          runId: ${{ fromJson(inputs.port_payload).context.runId }}

      - name: Log After Upserting Entity
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{fromJson(github.event.inputs.port_payload).context.runId}}
          logMessage: "Entity upserting was successful âœ…"